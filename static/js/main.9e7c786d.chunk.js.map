{"version":3,"sources":["Components/SignIn/SignIn.js","Components/Register/Register.js","Components/Navigation.js","Components/logo.svg","Components/Logo.js","Components/Input-form.js","Components/Rank.js","Components/FaceDetect.js","App.js","reportWebVitals.js","index.js"],"names":["isValid","Navigation","outScreen","signedIn","style","display","justifyContent","padding","onClick","className","Logo","options","max","height","width","alt","src","logo","InputForm","onChangeInput","onButtonClick","onChange","type","Rank","name","entries","FaceDetect","imgUrl","box","id","top","topRow","right","rightCol","left","leftCol","bottom","bottomRow","alert","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitChange","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","loadUser","homeScreen","swal","title","text","dangerMode","button","willDelete","warning","this","htmlFor","pattern","size","required","color","href","React","Component","Register","includes","onNameChange","alertfn","particlesOpt","particles","number","size_area","move","speed","initialState","input","route","user","joined","App","userData","formBox","facePoints","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","DisplayBox","boxes","count","Object","assign","catch","err","console","log","routes","resp","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9e7c786d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet isValid;\r\n\r\nlet alert = true;\r\n\r\nconst warning = () => {\r\n  if (alert) {\r\n    swal({\r\n      title: \"Error\",\r\n      text: \"Something is wrong , try again\",\r\n      dangerMode: true,\r\n      button: {\r\n        text: \"Ok\",\r\n      },\r\n    }).then((willDelete) => {});\r\n    return (alert = false);\r\n  }\r\n};\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n    };\r\n  }\r\n  onEmailChange = (event) => {\r\n    isValid = true;\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n  onSubmitChange = (event) => {\r\n    if (isValid === true) {\r\n      fetch(\"https://ancient-fjord-01096.herokuapp.com/signin\", {\r\n        method: \"post\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: this.state.signInEmail,\r\n          password: this.state.signInPassword,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.id) {\r\n            this.props.loadUser(data);\r\n            this.props.homeScreen(\"home\");\r\n          }\r\n        });\r\n    } else {\r\n      warning();\r\n      alert = true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { homeScreen } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <article className=\" white  mv4 w-100 w-50-m w-25-l mw5 center shadow-5 cssSignin\">\r\n          <main className=\"pa4 \">\r\n            <div className=\"measure \">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 white fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label\r\n                    className=\"db white fw6 lh-copy f6\"\r\n                    htmlFor=\"email-address\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onEmailChange}\r\n                    className=\"pa2 input-reset cssBorder bg-transparent  hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    pattern=\".+@globex\\.com\"\r\n                    size=\"30\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db white fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onPasswordChange}\r\n                    className=\"b pa2 input-reset cssBorder bg-transparent  hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  className=\"b ph3 pv2 white input-reset ba b--white bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Sign in\"\r\n                  onClick={this.onSubmitChange}\r\n                />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => homeScreen(\"register\")}\r\n                  className=\"f6 white link dim black db pointer\"\r\n                >\r\n                  Register\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n        <div className=\"white bg-box\">\r\n          <p>\r\n            Made With ❤ By <br />{\" \"}\r\n            <a\r\n              className=\" white\"\r\n              style={{ color: \"#00bfa5\" }}\r\n              href=\"https://github.com/notse\"\r\n            >\r\n              Nikhil Notse\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet isValid;\r\n\r\nlet alert = true;\r\n\r\nconst warning = () => {\r\n  if (alert) {\r\n    swal({\r\n      title: \"Error\",\r\n      text: \"only @Gmail.com Or @notse.com mails are Allowed\",\r\n      dangerMode: true,\r\n      button: {\r\n        text: \"Ok\",\r\n      },\r\n    }).then((willDelete) => {});\r\n    return (alert = false);\r\n  }\r\n};\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    };\r\n  }\r\n  onEmailChange = (event) => {\r\n    if (\r\n      event.target.value.includes(\"@gmail.com\") ||\r\n      event.target.value.includes(\"@notse.com\")\r\n    ) {\r\n      this.setState({ email: event.target.value });\r\n      isValid = true;\r\n    } else {\r\n      isValid = false;\r\n    }\r\n  };\r\n  onNameChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  onPasswordChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitChange = (event) => {\r\n    if (isValid === true) {\r\n      fetch(\"https://ancient-fjord-01096.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          name: this.state.name,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.id) {\r\n            this.props.loadUser(data);\r\n            this.props.homeScreen(\"home\");\r\n          }\r\n        });\r\n    } else {\r\n      //   alert(\"Please Note: only @Gmail.com Or @notse.com mails are Allowed \");\r\n      warning();\r\n      alert = true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { homeScreen } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <article className=\"white  mv4 w-100 w-50-m w-25-l mw5 center shadow-5 cssSignin \">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure \">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 white fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label\r\n                    className=\"db white fw6 lh-copy f6\"\r\n                    htmlFor=\"email-address\"\r\n                  >\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onNameChange}\r\n                    className=\"pa2 input-reset cssBorder bg-transparent  hover-white w-100\"\r\n                    type=\"name\"\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                  <label\r\n                    className=\"db white fw6 lh-copy f6\"\r\n                    htmlFor=\"email-address\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onEmailChange}\r\n                    className=\"pa2 input-reset cssBorder bg-transparent  hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    required=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db white fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onPasswordChange}\r\n                    className=\"b pa2 input-reset cssBorder bg-transparent  hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div>\r\n                <input\r\n                  className=\"b ph3 pv2 white input-reset ba b--white bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Register\"\r\n                  onClick={this.onSubmitChange}\r\n                />\r\n              </div>\r\n              <div className=\"lh-copy mt3\"></div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","const Navigation = ({outScreen ,signedIn}) => {\r\n    if (signedIn) {\r\n        return (\r\n            <div>\r\n                <nav style={{display:'flex', justifyContent: 'flex-end', padding: '5px'}}>\r\n                    <p onClick={() => outScreen('signin')} className=\"dim white  ma2 pointer f6 link dim ph3 pv2 mb2 dib white bg-mid-gray\">Sign Out</p>\r\n                </nav>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <nav style={{display:'flex', justifyContent: 'flex-end', padding: '5px'}}>\r\n                    <p onClick={() => outScreen('signin')} className=\"dim white  ma2 pointer f6 link dim ph3 pv2 mb2 dib white bg-mid-gray\">Sign IN</p>\r\n                    <p onClick={() => outScreen('register')} className=\" dim white  ma2 pointer f6 link dim ph3 pv2 mb2 dib white bg-mid-gray\">Register</p>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/logo.79d8421c.svg\";","import Tilt from 'react-tilt';\r\nimport logo from './logo.svg'; \r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div>\r\n            <Tilt className=\"Tilt br2 shadow-5 ma2 \" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa2\">\r\n                    <img alt=\"logo\" src={logo}  />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","const InputForm = ({onChangeInput, onButtonClick}) => {\r\n    return (\r\n    <div className=\"bgRank\">\r\n        <p className=\"white\"> Paste the image link with JPEG format and Detect The Face </p>\r\n        <div >\r\n            <div className=\" mar pattern   bb bw1 b--light-blue pa2\">\r\n                <input className=\" pa2 w-70  black br-pill bn shadow-5\"  onChange={onChangeInput} type=\"text\"  />\r\n                <button className=\"w-30  grow  link ph3  br-pill  dib white bg-light-blue bn\" onClick={onButtonClick}>Detect</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default InputForm;","const Rank = ({name, entries}) => {\r\n    return (\r\n        <div className=\"bgRank bgText\" >\r\n            <div >\r\n                <p className=\"f3 Black\">{` ${name}, your entry count is ...`}</p>\r\n             </div>\r\n             <div>\r\n                <p className=\"f2 ma0 Black\">{`#${entries}`}</p>\r\n             </div>\r\n             <div  >\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Rank;","import  './faceDetect.css' ;\r\n\r\nconst FaceDetect = ({imgUrl , box}) => {\r\n    return (\r\n        <div className=\"center\">\r\n            <img id=\"InputImage\" className=\"white bw2 w-500 h-50 br2\" alt =\" faces\" src={imgUrl} width=\"auto\" height=\"auto\" />\r\n            <div className=\"bound_box \" style={{top: box.topRow, right: box.rightCol , left: box.leftCol , bottom: box.bottomRow}}>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceDetect;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./Components/Navigation\";\nimport Logo from \"./Components/Logo\";\nimport InputForm from \"./Components/Input-form\";\nimport Rank from \"./Components/Rank\";\nimport FaceDetect from \"./Components/FaceDetect\";\nimport Particles from \"react-particles-js\";\nimport SignIn from \"./Components/SignIn/SignIn\";\nimport Register from \"./Components/Register/Register\";\nimport swal from \"sweetalert\";\n\nlet alert = true;\n\nconst alertfn = () => {\n  if (alert) {\n    swal({\n      title: \"FaceScan\",\n      text: \"FaceScan is a Facial recoginition App  using Face Detection Api it automatically recognize and locate faces from any angle with landmarks and alignment\",\n      dangerMode: false,\n      button: {\n        text: \"Ok\",\n      },\n    }).then((willDelete) => {});\n    return (alert = false);\n  }\n};\n\nalertfn();\n\nconst particlesOpt = {\n  particles: {\n    number: {\n      value: 50,\n    },\n    color: {\n      value: \"#00d9bb\",\n    },\n    size_area: {\n      value: 50,\n    },\n    size: {\n      value: 5,\n    },\n    move: {\n      speed: 5,\n    },\n  },\n};\nconst initialState = {\n  input: \"\",\n  imgUrl: \"\",\n  box: {},\n  route: \"signin\",\n  signedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch(\"https://ancient-fjord-01096.herokuapp.com/\").then((resp) =>\n      resp.json()\n    );\n  }\n\n  loadUser = (userData) => {\n    this.setState({\n      user: {\n        id: userData.id,\n        name: userData.name,\n        email: userData.email,\n        entries: userData.entries,\n        joined: userData.joined,\n      },\n    });\n  };\n\n  formBox = (data) => {\n    const facePoints = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"InputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: facePoints.left_col * width,\n      topRow: facePoints.top_row * height,\n      rightCol: width - facePoints.right_col * width,\n      bottomRow: height - facePoints.bottom_row * height,\n    };\n  };\n\n  DisplayBox = (boxes) => {\n    this.setState({ box: boxes });\n  };\n\n  onChangeInput = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonClick = () => {\n    this.setState({ imgUrl: this.state.input });\n    fetch(\"https://ancient-fjord-01096.herokuapp.com/imageUrl\", {\n      method: \"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(\"https://ancient-fjord-01096.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n        this.DisplayBox(this.formBox(response));\n      })\n      .catch((err) => {\n        console.log(\"there is error: 1\");\n      });\n  };\n\n  homeScreen = (routes) => {\n    if (routes === \"signin\") {\n      this.setState(initialState);\n    } else if (routes === \"home\") {\n      this.setState({ signedIn: true });\n    }\n    this.setState({ route: routes });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles params={particlesOpt} />\n        <Navigation\n          signedIn={this.state.signedIn}\n          outScreen={this.homeScreen}\n        />\n        {this.state.route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <InputForm\n              onButtonClick={this.onButtonClick}\n              onChangeInput={this.onChangeInput}\n            />\n            <FaceDetect box={this.state.box} imgUrl={this.state.imgUrl} />\n          </div>\n        ) : this.state.route === \"signin\" ? (\n          <SignIn loadUser={this.loadUser} homeScreen={this.homeScreen} />\n        ) : (\n          <Register loadUser={this.loadUser} homeScreen={this.homeScreen} />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}